import Head from 'next/head'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import { Row, Col, Form } from 'react-bootstrap'
import { useDispatch, useSelector } from 'react-redux'
import Loader from '../components/Loader'
import Paginate from '../components/Paginate'
import Product from '../components/Product'
import TopProductCarousel from '../components/TopProductCarousel'
import { fetchAllCategory } from '../redux/actions/categoryActions'
import { fetchAllProducts } from '../redux/actions/productsActions'
import styles from '../styles/Home.module.css'

const Home = () => {
  const dispatch = useDispatch()
  const router = useRouter()
  const keyword = router.query.keyword || ''
  const pageNumber = router.query.page || 1
  const [categoryName, setCategoryName] = useState('All')
  const [search, setSearch] = useState('')
  const { products, loading } = useSelector(state => state)
  const page = products?.products?.page
  const pages = products?.products?.pages
  const categoryList = useSelector(state => state.category.category)
  const filterProduct = products?.products?.products.filter(produit => produit.category === categoryName)
  const searchProduct = products?.products?.products.filter(produit => produit.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)
  useEffect(() => {
    dispatch(fetchAllProducts(keyword, pageNumber))
    dispatch(fetchAllCategory())
  }, [dispatch, page, pageNumber])
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className='container'>
          <TopProductCarousel />
          <h1>Latest Products</h1>
          <Row>
            <Col sm={12} md={8} lg={8} xl={8}>
              <Form>
                <Form.Group controlId='name'>
                  <Form.Control
                    type='name'
                    placeholder='Search product'
                    value={search}
                    onChange={(e) => setSearch(e.target.value)}
                  ></Form.Control>
                </Form.Group>
              </Form>
            </Col>
            <Col sm={12} md={6} lg={4} xl={4}>
              <Form>
                <Form.Group controlId='category'>
                  <Form.Select className="me-sm-2 mb-2"
                    id="inlineFormCustomSelect"
                    value={categoryName}
                    onChange={(e) => setCategoryName(e.target.value)}
                  >
                    <option value='All'>All</option>
                    {
                      categoryList?.map(categ => (
                        <option value={categ.categoryName}>{categ.categoryName}</option>
                      ))
                    }
                  </Form.Select>
                </Form.Group>
              </Form>
            </Col>
          </Row>
          {loading ? <Loader /> : (<>
            <Row className='mb-5'>
              {categoryName !== 'All' ? filterProduct?.map((product) => (
                <Product product={product} key={product._id} />
              )) : searchProduct?.map((product) => (
                <Product product={product} key={product._id} />
              ))}
            </Row>
            <Paginate
              pages={pages}
              page={page}
              keyword={keyword ? keyword : ''}
            />
          </>
          )}
        </div>
      </main>
    </div>
  )
}
export default Home